---
- import_playbook: "set_variables.yml"
  tags: always

- name: host file update - Local DNS setup across all the servers
  hosts: all
  gather_facts: yes
  tasks:
    - name: Update the /etc/hosts file with node name
      tags: etchostsupdate
      become: yes
      become_user: root
      lineinfile:
        path: "/etc/hosts"
        regexp: ".*\t{{ hostvars[item]['ansible_hostname']}}\t{{ hostvars[item]['ansible_hostname']}}"
        line: "{{ hostvars[item]['ansible_env'].SSH_CONNECTION.split(' ')[2] }}\t{{ hostvars[item]['ansible_hostname']}}\t{{ hostvars[item]['ansible_hostname']}}"
        state: present
        backup: yes
      register: etchostsupdate
      when: ansible_hostname != "{{ item }}" or ansible_hostname == "{{ item }}"
      with_items: "{{groups['all']}}"

- name: Apply the common role to the hadoop-cluster group
  hosts: hadoop-cluster
  any_errors_fatal: true
  become: yes
  roles:
    - common
  tags: common

- name: Apply the database role to the ambari-server group
  hosts: ambari-server
  any_errors_fatal: true
  become: yes
  roles:
    - role: database
      when: database != "embedded" and not database_options.external_hostname|default('')
  tags: database

- name: Apply the krb5-client role to the hadoop-cluster group
  hosts: hadoop-cluster
  any_errors_fatal: true
  become: yes
  roles:
    - role: krb5-client
      when: security == "mit-kdc"
  tags: mit-kdc

- name: Apply the mit-kdc role to the ambari-server group
  hosts: ambari-server
  any_errors_fatal: true
  become: yes
  roles:
    - role: mit-kdc
      when: security == "mit-kdc" and not security_options.external_hostname|default('')
  tags: mit-kdc
